import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: com.soywiz.korlibs.KorlibsPlugin

dependencies {
    commonMainApi("com.soywiz.korlibs.korim:korim:$korimVersion")
}

korlibs {
    exposeVersion()
    //dependencyCInteropsExternal("com.soywiz:korim:$korimVersion", "stb_image", ["linuxX64", "iosX64", "iosArm32", "iosArm64"])
    //dependencyCInterops("GL", ["linuxX64"])

    dependencies {
        def jnaVersion = "5.5.0"
        add("jvmMainApi", "net.java.dev.jna:jna:$jnaVersion")
        add("jvmMainApi", "net.java.dev.jna:jna-platform:$jnaVersion")
        //add("jvmMainApi", "com.github.jnr:jnr-ffi:2.1.11")

        if (hasAndroid) {
            add("androidMainApi", "com.android.support:appcompat-v7:28.0.0")
        }
    }
}

kotlin {
    if (korlibs.linuxEnabled) {
        linuxX64 {
            compilations.main {
                cinterops {
                    GL {
                        //print(it)
                        //def linuxFolder = new File(rootDir, "nlib/linuxX64")
                        //compilerOpts("-I${new File(linuxFolder, "include").absolutePath}")
                        //linkerOpts("-L${new File(linuxFolder, "lib/x86_64-linux-gnu").absolutePath}")
                    }
                }
            }
        }
    }
}

kotlin.sourceSets {
    jvmMain {
        resources.srcDir("libs")
    }
}

task runSample(type: JavaExec) {
    classpath = kotlin.targets.jvm.compilations.test.runtimeDependencyFiles
    main = 'com.soywiz.korgw.TestGameWindow'
}

task runSampleFirstThread(type: JavaExec) {
    classpath = kotlin.targets.jvm.compilations.test.runtimeDependencyFiles
    if (Os.isFamily(Os.FAMILY_MAC)) {
        jvmArgs "-XstartOnFirstThread"
    }
    main = 'com.soywiz.korgw.TestGameWindow'
}

task runSampleMainThread {
    dependsOn runSampleFirstThread
}
