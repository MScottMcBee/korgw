group 'com.soywiz'
version korVersion

buildscript {
	repositories {
		mavenLocal()
		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
	}
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.jfrog.bintray'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.5

sourceSets {
	main.java.srcDirs = ['src']
	test.java.srcDirs = ['test']
	main.resources.srcDirs = ['resources']
	test.resources.srcDirs = ['testresources']
}

repositories {
	mavenLocal()
	maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }
	maven { url "https://dl.bintray.com/soywiz/soywiz-maven" }
	mavenCentral()
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	compile "com.soywiz:korio-core:$korVersion"
	compile "com.soywiz:korim-core:$korVersion"
	compile "com.soywiz:korag-core:$korVersion"
	testCompile "junit:junit:4.11"
}


task javadoc2(type: Javadoc) {
	failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc2) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

// gradle uploadArchives
if (project.hasProperty('sonatypeUsername')) {
	signing {
		sign configurations.archives
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: project.sonatypeUsername, password: project.sonatypePassword)
				}

				pom.project {
					name "${project.name}"
					packaging 'jar'
					description 'Kotlin cORoutines User Interfaces for JVM, Node.JS and Browser using JTransc'
					url 'https://github.com/soywiz/korui/'
					inceptionYear '2016'

					scm {
						url 'scm:git@github.com:soywiz/korui.git'
						connection 'scm:git@github.com:soywiz/korui.git'
						developerConnection 'scm:git@github.com:soywiz/korui.git'
					}

					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}

					developers {
						developer {
							id 'soywiz'
							name 'Carlos Ballesteros Velasco'
						}
					}
				}
			}
		}
	}
}

publishing {
	publications {
		MyPublication(MavenPublication) {
			from components.java
			groupId project.group
			artifactId project.name
			version "$project.version"
		}
	}
}

// gradle bintrayUpload
if (project.hasProperty('BINTRAY_USER')) {
	bintray {
		// https://github.com/bintray/gradle-bintray-plugin#buildgradle
		//Properties bintray = new Properties()
		//bintray.load(new FileInputStream(System.getProperty("user.home") + "/.bintray.properties"))

		user = BINTRAY_USER
		key = BINTRAY_KEY
		publications = ['MyPublication']
		publish = true
		override = true

		pkg {
			repo = "soywiz-maven"
			name = project.name
			userOrg = 'soywiz'
			licenses = ['Apache-2.0']
			vcsUrl = 'https://github.com/soywiz/korui.git'
		}
	}
}

task deploy(dependsOn: ['install', 'bintrayUpload', 'uploadArchives']) {
}