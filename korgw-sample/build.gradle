dependencies {
    commonMainApi project(":korgw")

    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-linux-amd64"
    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-linux-armv6"
    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-linux-armv6hf"
    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-linux-i586"
    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-macosx-universal"
    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-windows-amd64"
    commonMainApi "org.jogamp.gluegen:gluegen-rt:$gluegenVersion:natives-windows-i586"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-linux-amd64"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-linux-armv6"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-linux-armv6hf"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-linux-i586"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-macosx-universal"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-windows-amd64"
    commonMainApi "org.jogamp.jogl:jogl-all:$joglVersion:natives-windows-i586"
}

def targets = ['macosX64', 'mingwX64', 'linuxX64']

for (target in targets) {
    kotlin.targets[target].compilations.main.outputKinds("EXECUTABLE")
}

afterEvaluate {
    // runMingwX64Main, runLinuxX64Main, runMacosX64Main
    for (target in targets) {
        def ctarget = target.capitalize()
        tasks.create("run${ctarget}Main", Exec) {
            dependsOn(tasks.findByName("linkDebugExecutable${ctarget}"))
            executable = kotlin.targets[target].compilations.main.getBinary("EXECUTABLE", "debug")
            args = []
        }
    }
}
